
---

## 2️⃣ `backend/src/index.js` — Fully Fleshed Backend (Node.js)

```javascript
import express from "express";
import mysql from "mysql2";
import dotenv from "dotenv";
import cors from "cors";
import bodyParser from "body-parser";

dotenv.config();

const app = express();
const PORT = process.env.PORT || 5000;

// Middleware
app.use(cors());
app.use(bodyParser.json());

// Database Connection
const db = mysql.createConnection({
  host: process.env.DB_HOST,
  user: process.env.DB_USER,
  password: process.env.DB_PASS,
  database: process.env.DB_NAME
});

db.connect(err => {
  if (err) {
    console.error("Database connection failed:", err.message);
  } else {
    console.log("✅ Connected to MySQL Database");
  }
});

// Routes
app.get("/", (req, res) => {
  res.send("Welcome to the Travel & Ticketing System API 🚀");
});

// Get all tickets
app.get("/api/tickets", (req, res) => {
  db.query("SELECT * FROM tickets", (err, results) => {
    if (err) return res.status(500).json({ error: err.message });
    res.json(results);
  });
});

// Create new ticket
app.post("/api/tickets", (req, res) => {
  const { passenger_name, trip_id, seat_no, payment_status } = req.body;
  if (!passenger_name || !trip_id || !seat_no) {
    return res.status(400).json({ error: "Missing required fields" });
  }

  const query = `INSERT INTO tickets (passenger_name, trip_id, seat_no, payment_status)
                 VALUES (?, ?, ?, ?)`;

  db.query(query, [passenger_name, trip_id, seat_no, payment_status || "Pending"], (err, result) => {
    if (err) return res.status(500).json({ error: err.message });
    res.status(201).json({ message: "Ticket created successfully", id: result.insertId });
  });
});

// Error handling middleware
app.use((err, req, res, next) => {
  console.error(err.stack);
  res.status(500).send("Something broke!");
});

// Server Start
app.listen(PORT, () => console.log(`🚍 Server running on port ${PORT}`));
